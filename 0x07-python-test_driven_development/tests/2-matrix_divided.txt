===============================
2. Division of matrix module
===============================

Import module:
==============
    >>> matrix_divided = __import__('2-matrix_divided').matrix_divided


-------- empty Parameters
=========================

    >>> matrix_divided()
    Traceback (most recent call last):
    TypeError: matrix_divided() missing 2 required positional arguments: 'matrix' and 'div'


------------ right Matrix
=========================

    >>> matrix = [[1, 2, 3],[4, 5, 6]]
    >>> matrix_divided(matrix, 3)
    [[0.33, 0.67, 1.0], [1.33, 1.67, 2.0]]

    >>> matrix = [[1.0, -2.0, -3.0],[-4.0, 5.0, -6.0]]
    >>> matrix_divided(matrix, 3.0)
    [[0.33, -0.67, -1.0], [-1.33, 1.67, -2.0]]

    >>> matrix = [[1e400, 1e500, 1e600],[1e900, 1e800, 1e700]]
    >>> matrix_divided(matrix, 3)
    [[inf, inf, inf], [inf, inf, inf]]


-------------- wrong Matrix
===========================

    >>> matrix = 'Hi Sam'
    >>> matrix_divided(matrix, 3)
    Traceback (most recent call last):
    TypeError: matrix must be a matrix (list of lists) of integers/floats

    >>> matrix = [[1, 2, 3], 4, 5, 6]
    >>> matrix_divided(matrix, 3)
    Traceback (most recent call last):
    TypeError: matrix must be a matrix (list of lists) of integers/floats

    >>> matrix = [[[10.0], [65], [37.0]],[[40], [15.0], [66]]]
    >>> matrix_divided(matrix, 2)
    Traceback (most recent call last):
    TypeError: matrix must be a matrix (list of lists) of integers/floats

    >>> matrix = [['1', '2', '3'], ['4', '5', '6']]
    >>> matrix_divided(matrix, 3)
    Traceback (most recent call last):
    TypeError: matrix must be a matrix (list of lists) of integers/floats

    >>> matrix = [1, 2, 3, 4, 5, 6]
    >>> matrix_divided(matrix, 3)
    Traceback (most recent call last):
    TypeError: matrix must be a matrix (list of lists) of integers/floats

    >>> matrix = [[1, 2, 3], [4, 5, 6], 'Hi Sam']
    >>> matrix_divided('matrix', 2)
    Traceback (most recent call last):
    TypeError: matrix must be a matrix (list of lists) of integers/floats


    >>> matrix = []
    >>> type(matrix_divided(matrix, 3))
    Traceback (most recent call last):
    TypeError: matrix must be a matrix (list of lists) of integers/floats

    >>> matrix = [[], []]
    >>> type(matrix_divided(matrix, 3))
    Traceback (most recent call last):
    TypeError: matrix must be a matrix (list of lists) of integers/floats


---------- Bad Divisor
======================

    >>> matrix = [[1, 2, 54.0], [24, 35.5, 6]]
    >>> matrix_divided(matrix, None)
    Traceback (most recent call last):
    TypeError: div must be a number

    >>> matrix = [[1, 2, 54.0], [24, 35.5, 6]]
    >>> matrix_divided(matrix, 'Hi Sam')
    Traceback (most recent call last):
    TypeError: div must be a number

    >>> matrix = [[1, 2, 54.0], [24, 35.5, 6]]
    >>> matrix_divided(matrix, float('nan'))
    Traceback (most recent call last):
    TypeError: div must be a number

    >>> matrix = [[10.0, 65, 37.0],[40, 15.0, 66]]
    >>> matrix_divided(matrix, 0)
    Traceback (most recent call last):
    ZeroDivisionError: division by zero


---- Inconsistent rows
======================

    >>> matrix = [[1, 2, 3], [4, 5]]
    >>> matrix_divided(matrix, 3)
    Traceback (most recent call last):
    TypeError: Each row of the matrix must have the same size
